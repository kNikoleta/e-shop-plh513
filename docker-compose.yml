version: '3.8'
services:
    # MySQL service for products
  mysql-products:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: products_db
      MYSQL_USER: user
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_products_data:/var/lib/mysql
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MySQL service for orders
  mysql-orders:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders_db
      MYSQL_USER: user
      MYSQL_PASSWORD: root
    ports:
      - "3307:3306"
    volumes:
      - mysql_orders_data:/var/lib/mysql
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  product-service:
    build: ./ProductService
    ports:
      - "3001:3001"
    depends_on:
      mysql-orders:
        condition: service_healthy
      mysql-products:
        condition: service_healthy
    environment:
      DB_HOST: mysql-products
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: products_db
    networks:
      - my_network

  order-service:
    build: ./OrderService
    ports:
      - "3004:3004"
    depends_on:
      mysql-orders:
        condition: service_healthy
      mysql-products:
        condition: service_healthy
    environment:
      DB_HOST: mysql-orders
      DB_USER: user
      DB_PASSWORD: root
      DB_NAME: orders_db
    networks:
      - my_network

   # Angular app service
  my-app:
    build: .
    ports:
      - "4200:80"
    networks:
      - my_network

networks:
  my_network:
   driver: bridge 
    
volumes:
  mysql_products_data:
  mysql_orders_data:
