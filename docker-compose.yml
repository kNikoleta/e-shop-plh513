version: '3.8'
services:
  # MySQL service for products
  mysql-products:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: products_db
      MYSQL_USER: user
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"         # Make sure to change this if needed to avoid conflict
    volumes:
      - mysql_products_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - my_network

  # MySQL service for orders
  mysql-orders:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders_db
      MYSQL_USER: user
      MYSQL_PASSWORD: root
    ports:
      - "3307:3306"         # Change the host port to avoid conflict with the first MySQL container
    volumes:
      - mysql_orders_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - my_network

  product-service:
    build: ./ProductService
    ports:
      - "3003:3003"
    depends_on:
      - mysql-products
    environment:
      DB_HOST: mysql-products
      DB_USER: user
      DB_PASSWORD: root
      DB_NAME: products_db
    networks:
      - my_network

  order-service:
    build: ./OrderService
    ports:
      - "3002:3002"
    depends_on:
      - mysql-orders
    environment:
      DB_HOST: mysql-orders  # Make sure this matches the service name of your MySQL container
      DB_USER: user
      DB_PASSWORD: root
      DB_NAME: orders_db
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  mysql_products_data:
  mysql_orders_data:
